<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.mapper.SampleMapper">


	<!-- 마이바티스는 #{변수명}을 이용하여 변수를 넣어줌-->
	<!-- 마이바티스는 가져온 변수(파라미터가 단수인 경우는 #{value}을 이용하여 변수를 넣어줌-->
	<!-- 마이바티스는 가져온 변수 or 모델(파라미터)이/가 복수인 경우는 #{DAO에 있는 변수명을 사용}을 이용하여 변수를 넣어줌-->

	<!-- C insert 생성 -->
	<!-- 모델(DAO)를 등록함 -->
	<!-- 인설트 방식은 3가지가 있다.
	<insert id="insert(내가하는작업을서술)" parameterType="(받아오는값의 DAO)">
	1. 테이블에 넣는 과정이고 보통 모델형태로 받아오는경우가 많음
	2. 테이블 구조를 보고 not null인 컬럼(레코드)와 아닌 컬럼(레코드)를 체크하여 내가 넣을 데이터를 확인하고 자료형이 매치 되는지 확인
	3. 프라이머리키는 고유의 값이며 mysql과 mariadb에는 자동배정이 있지만 사용하지 않음 (간혹 문제가 생김)
	id 				= **mapper.java 인터페이스 메소드와 매칭
	parameterType 	= 넣는값 / 데이터를 가져와서 DB에 조회하거나 넣어주기 위해 담아오는 변수나 모델
	resultType 		= 결과값 / 데이터를 조회하여 담아서 가져오는 변수나 모델 
	 -->
	<insert id="insertSampleTable" parameterType="com.dao.MemberDao"> 
        INSERT INTO member <!-- (테이블명) --> 
        (id, nm, userId, pw, addr1, addr2, pno, regDt, regId, updateDt, updateId, useYn) <!-- ( 해당 테이블 레코드) --> 
        VALUES <!-- (질의문중 1가지 방법) --> 
        (#{id}, #{nm}, #{userId}, #{pw}, #{addr1}, #{addr2}, #{pno}, now(), 99999, now(), 99999, "Y") 
    </insert>

	
	
	<!-- R selct 검색 -->
	<!-- where의 조건문으로 내가 원하는 데이터만 조회해오는게 핵심 -->
	<!--
	<select id="select(내가하는작업을서술)" parameterType="(받아오는값의 DAO의모델형식)">
	<select id="select(내가하는작업을서술)" parameterType="int or String">
	1. 질의문 구조는 selct * from (테이블명) 기본
	2. WHERE 라는 후행 조건문을 통하여 조건에 맞는 데이터만 가져옴
	3. WHERE에 조건문은 무제한 넣기 가능
	EX) SELCT * FROM (테이블명) WHERE 컬럼명(레코드) = (변수값) AND 컬럼명(레코드) = (변수값) And .... 무한으로 걸수있다. 
	EX) SELCT * FROM (테이블명) WHERE 컬럼명(레코드) = (변수값) OR 컬럼명(레코드) = (변수값)
	EX) SELECT * FROM (테이블명)
	EX) 
	EX)
	 -->
	<select id="selectTableNumberingSample" resultType="int">
		SELECT id FROM member ORDER BY id DESC LIMIT 1
	</select>
	<!-- 파라미터가 단수인 경우 -->
	<select id="selectMemberSample" parameterType="int" resultType="com.vo.Member">
		SELECT * FROM member WHERE id = #{value}
	</select>
	<!-- 파라미터가 복수인 경우 -->
	<select id="selectMemberListSample" parameterType="com.dao.MemberDao" resultType="com.vo.Member">
		SELECT * FROM member WHERE id = #{id} AND nm = #{nm}
	</select>
	
	<!-- U update 수정 -->
	<!-- where의 조건문으로 어던데이터를 바꿀껀지 특정해줘야함  -->
	<!--	UPDATE (테이블명) -->
	<!--	SET (레코드명_어디부분) = (가져온 파라미터 변수) -->
	<!--	WHERE (레코드/컬럼) = (가져온 파라미터 변수인데 특정값) -->
	<!--1.	수정할 부분을 체크해준다  -->
	<!--2. WHERE 조건을 확실하게 해준다. 잘못하면 전체 데이터가 변경되는 대참사가 벌어진다. -->
	 <!-- U update 한개수정 -->
	<update id="updateMember" parameterType="com.dao.MemberDao">
		UPDATE member
		SET pno = #{pno}
		WHERE id = #{id} <!-- 조건문을 무조건 작성해야함 중요함 ☆☆☆☆☆ -->
	</update>
	 
	 <!-- U update 한개이상 수정 -->               
	<update id="updateMemberAddr" parameterType="com.dao.MemberDao">
		UPDATE member
		SET addr1 = #{addr1},
		 	addr2 = #{addr2}
		WHERE id = #{id} <!-- 조건문을 무조건 작성해야함 중요함 ☆☆☆☆☆ --> 
	</update>
	
</mapper>
